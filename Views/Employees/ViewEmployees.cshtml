@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Employees";
}

<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>

    <form id="searchForm" class="mb-4">
        <div class="row g-3">
            <div class="col-12 col-md-6 col-lg-3">
                <label for="employee_id" class="form-label">Employee ID</label>
                <input type="number" class="form-control" id="employee_id" name="employee_id" placeholder="Employee ID">
            </div>
            <div class="col-12 col-md-6 col-lg-3">
                <label for="first_name" class="form-label">First Name</label>
                <input type="text" class="form-control" id="first_name" name="first_name" placeholder="First Name">
            </div>
            <div class="col-12 col-md-6 col-lg-3">
                <label for="last_name" class="form-label">Last Name</label>
                <input type="text" class="form-control" id="last_name" name="last_name" placeholder="Last Name">
            </div>
            <div class="col-12 col-md-6 col-lg-3">
                <label for="email" class="form-label">Email</label>
                <input type="text" class="form-control" id="email" name="email" placeholder="Email">
            </div>
        </div>
        <div class="row g-3 mt-1">
            <div class="col-12 col-md-4">
                <label for="department_name" class="form-label">Department Name</label>
                <input type="text" class="form-control" id="department_name" name="department_name" placeholder="Department Name">
            </div>
            <div class="col-12 col-md-4">
                <label for="country_name" class="form-label">Country Name</label>
                <input type="text" class="form-control" id="country_name" name="country_name" placeholder="Country Name">
            </div>
            <div class="col-12 col-md-4">
                <label for="region_name" class="form-label">Region Name</label>
                <input type="text" class="form-control" id="region_name" name="region_name" placeholder="Region Name">
            </div>
        </div>
        <div class="mt-3">
            <button type="submit" class="btn btn-primary">Search</button>
            <a href="/swagger" class="btn btn-secondary ms-2">Swagger UI</a>
        </div>
    </form>

    <div class="table-responsive">
        <table id="employeesTable" class="table table-striped table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>Employee ID</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Job Title</th>
                    <th>Department</th>
                    <th>Location</th>
                    <th>Country</th>
                    <th>Region</th>
                    <th>Dependents</th>
                </tr>
            </thead>
            <tbody>
                <!-- Data will be populated here -->
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            let dataTable;

            function loadAllEmployees() {
                $.ajax({
                    url: '/api/EmployeesAPI',
                    method: 'GET',
                    success: function (data) {
                        initializeDataTable(data);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching employees:', error);
                    }
                });
            }

            function initializeDataTable(employees) {
                dataTable = $('#employeesTable').DataTable({
                    data: employees,
                    columns: [
                        { data: 'employeeId' },
                        {
                            data: null,
                            render: function (data, type, row) {
                                return `${data.firstName || ''} ${data.lastName || ''}`.trim();
                            }
                        },
                        { data: 'email', defaultContent: '' },
                        { data: 'job.jobTitle', defaultContent: '' },
                        { data: 'department.departmentName', defaultContent: '' },
                        { data: 'department.location.city', defaultContent: '' },
                        { data: 'department.location.country.countryName', defaultContent: '' },
                        { data: 'department.location.country.region.regionName', defaultContent: '' },
                        {
                            data: null,
                            render: function (data, type, row) {
                                if (data.dependents && data.dependents.length > 0) {
                                    return data.dependents.map(function (d) {
                                        return `${d.firstName || ''} ${d.lastName || ''} (${d.relationship || ''})`.trim();
                                    }).join(', ');
                                } else {
                                    return 'None';
                                }
                            },
                            defaultContent: ''
                        }
                    ],
                    paging: true,
                    searching: true,
                    responsive: true,
                    order: [[0, 'asc']],
                    lengthChange: false,
                    autoWidth: false,
                    language: {
                        search: 'Filter records:',
                        lengthMenu: 'Display _MENU_ records per page',
                    },
                });
            }

            $('#searchForm').submit(function (event) {
                event.preventDefault();

                var formData = $(this).serialize();

                $.ajax({
                    url: '/api/EmployeesAPI/Search',
                    method: 'GET',
                    data: formData,
                    success: function (data) {
                        dataTable.clear().rows.add(data).draw();
                    },
                    error: function (xhr, status, error) {
                        if (xhr.status === 400) {
                            alert(xhr.responseText);
                        } else {
                            console.error('Error searching employees:', error);
                        }
                    }
                });
            });

            loadAllEmployees();
        });
    </script>
}
